@model Fresh_University_Enrollment.Models.Student
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Enrollment - Enrollment System</title>
    <link rel="stylesheet" href="@Url.Content("~/Content/bootstrap.min.css")">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f0f2f5;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }
        .content-section {
            padding: 30px;
            flex-grow: 1;
        }
        #subjectSelectionArea {
            display: none;
        }
        .info-display-box {
            background-color: #e9ecef;
            padding: 15px;
            border-radius: .3rem;
            margin-bottom: 20px;
            font-size: 1.1rem;
            font-weight: 500;
            color: #343a40;
        }
    </style>
</head>
<body>
@Html.Partial("_MainHeader")

<div class="container content-section">
    <h1 class="mb-4">Student Enrollment</h1>
    <p class="lead">Begin your enrollment process, select subjects, and confirm your course load for the upcoming academic term.</p>

    <div class="card mt-4">
        <div class="card-body">
            <h5 class="card-title mb-4">Student Information</h5>
            @using (Html.BeginForm("Enroll", "StudentEnrollment", FormMethod.Post, new { id = "enrollmentForm" }))
            {
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="form-label">Student ID</label>
                        @Html.TextBoxFor(model => model.Stud_Code, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

                <div class="row mb-4">
                    <div class="col-md-3">
                        <label class="form-label">Academic Year</label>
                        <select class="form-select" name="Academic Year" id="schoolYear">
                            <option selected disabled>Choose S.Y...</option>
                            @{
                                var academicYears = ViewBag.AcademicYears as List<Fresh_University_Enrollment.Models.AcademicYear>;
                            }
                            @if (academicYears != null && academicYears.Any())
                            {
                                foreach (var academicYear in academicYears)
                                {
                                    <option value="@academicYear.AyCode">@($"{academicYear.AyStartYear}-{academicYear.AyEndYear}")</option>
                                }
                            }
                            else
                            {
                                <option disabled>No academic year found</option>
                            }

                            @* @{ *@
                            @*     var academicYears = ViewBag.AcademicYears as List<Fresh_University_Enrollment.Models.AcademicYear>; *@
                            @* } *@
                            @* @if (academicYears?.Any() == true) *@
                            @* { *@
                            @*     foreach (var academicYear in academicYears) *@
                            @*     { *@
                            @*         <option value="@academicYear.AyCode"> *@
                            @*             @($"{academicYear.AyStartYear}-{academicYear.AyEndYear}") *@
                            @*         </option> *@
                            @*     } *@
                            @* } *@
                            @* else *@
                            @* { *@
                            @*     <option disabled>No Academic Year found</option> *@
                            @* } *@
                        </select>

                    </div>
                    
                    <div class="col-md-3">
                        <label class="form-label">Semester</label>
                        <select class="form-select" name="enrollmentSemester" id="enrollmentSemester">
                            <option selected disabled>Choose...</option>
                            <option value="1st Semester">1st Semester</option>
                            <option value="2nd Semester">2nd Semester</option>
                            <option value="Summer">Summer</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Student Status</label>
                        <select class="form-select" name="studentStatus">
                            <option selected disabled>Choose...</option>
                            <option value="Regular">Regular</option>
                            <option value="Irregular">Irregular</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Enrollment Status</label>
                        <select class="form-select" name="enrollmentStatus">
                            <option selected disabled>Choose...</option>
                            <option value="New">New</option>
                            <option value="Old">Old</option>
                            <option value="Transferee">Transferee</option>
                            <option value="Cross-Enrollee">Cross-Enrollee</option>
                        </select>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-4">
                        <label class="form-label">Last Name</label>
                        @Html.TextBoxFor(model => model.Stud_Lname, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">First Name</label>
                        @Html.TextBoxFor(model => model.Stud_Fname, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Middle Name</label>
                        @Html.TextBoxFor(model => model.Stud_Mname, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

                <div class="mb-3">
                    <label class="form-label">Home Address</label>
                    @Html.TextBoxFor(model => model.Stud_Address, new { @class = "form-control", @readonly = "readonly" })
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="form-label">Contact Number</label>
                        @Html.TextBoxFor(model => model.Stud_Contact, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Email</label>
                        @Html.TextBoxFor(model => model.Stud_Email, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

                <div class="row mb-4">
                    <div class="col-md-3">
                        <label class="form-label">Year Level</label>
                        <select class="form-select" name="yearLevel" id="yearLevel">
                            <option selected disabled>Choose...</option>
                            <option value="1st Year">1st Year</option>
                            <option value="2nd Year">2nd Year</option>
                            <option value="3rd Year">3rd Year</option>
                            <option value="4th Year">4th Year</option>
                        </select>
                    </div>

                    <div class="col-md-3">
                        <label class="form-label">Program</label>
                        <select class="form-select" name="program" id="program">
                            <option value="" selected disabled>Choose Program...</option>
                            @{
                                var programs = ViewBag.Programs as List<Fresh_University_Enrollment.Models.Program>;
                            }
                            @if (programs != null && programs.Any())
                            {
                                foreach (var program in programs)
                                {
                                    <option value="@program.ProgCode">@program.ProgTitle</option>
                                }
                            }
                            else
                            {
                                <option disabled>No programs found</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Block Section</label>
                        <input type="text" class="form-control" name="blockSection" placeholder="e.g., IT-A">
                    </div>
                </div>

                <hr class="my-4">

                <h5 class="card-title">Subject Selection</h5>
                <p class="text-danger">Note: ONLY Irregular Students will fill out this section.</p>
                <button type="button" class="btn btn-info mb-3" id="selectSubjectsBtn">SELECT SUBJECTS</button>

                <div id="subjectSelectionArea">
                    <h5 class="card-title">Available Subjects</h5>
                    <div class="table-responsive mb-3">
                        <table class="table table-bordered table-striped">
                            <thead>
                            <tr>
                                <th>COURSE CODE</th>
                                <th>DESCRIPTIVE TITLE</th>
                                <th>Time</th>
                                <th>Days</th>
                                <th>Room</th>
                                <th>Units</th>
                                <th>Action</th>
                            </tr>
                            </thead>
                            <tbody id="availableSubjectsTableBody">
                            <tr>
                            </tr>
                            </tbody>
                        </table>
                    </div>

                    <h6 class="mb-2">Selected Subjects</h6>
                    <div class="table-responsive">
                        <table class="table table-bordered table-striped">
                            <thead>
                            <tr>
                                <th>COURSE CODE</th>
                                <th>DESCRIPTIVE TITLE</th>
                                <th>Time</th>
                                <th>Days</th>
                                <th>Room</th>
                                <th>Units</th>
                                <th>Action</th>
                            </tr>
                            </thead>
                            <tbody id="selectedSubjectsTableBody">
                            </tbody>
                        </table>
                    </div>
                    <p class="card-text mt-3"><strong>Total Units:</strong> <span id="totalUnitsDisplay">0</span></p>
                </div>

                <button type="submit" class="btn btn-primary mt-4">CONFIRM ENROLLMENT</button>
            }
        </div>
    </div>
</div>

<script src="@Url.Content("~/Scripts/bootstrap.bundle.min.js")"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        
        const selectSubjectsBtn = document.getElementById('selectSubjectsBtn');
        const subjectSelectionArea = document.getElementById('subjectSelectionArea');
        const availableSubjectsTableBody = document.getElementById('availableSubjectsTableBody');
        const selectedSubjectsTableBody = document.getElementById('selectedSubjectsTableBody');
        const totalUnitsDisplay = document.getElementById('totalUnitsDisplay');



        selectSubjectsBtn.addEventListener('click', function () {
            const semester = document.getElementById('enrollmentSemester').value;
            const yearLevel = document.getElementById('yearLevel').value;
            const program = document.getElementById('program').value;

            if (!semester || !yearLevel || !program) {
                alert("Please select Program, Year Level, and Semester before proceeding.");
                return;
            }

            subjectSelectionArea.style.display = 'block';
            loadAvailableSubjects(semester, yearLevel, program);
        });



        // Load subjects from API and populate table
        function loadAvailableSubjects(semester, yearLevel, program) {
            const url = `@Url.Action("GetAvailableSubjects", "StudentEnrollment")` +
                `?cur_semester=${semester}&cur_year_level=${yearLevel}&prog_code=${program}`;

            fetch(url)
                .then(response => response.json())
                .then(subjects => {
                    availableSubjectsTableBody.innerHTML = ''; // Clear existing rows

                    subjects.forEach(sub => {
                        const row = document.createElement('tr');

                        row.innerHTML = `
                    <td>${sub.CourseCode}</td>
                    <td>${sub.Title}</td>
                    <td>${sub.Time}</td>
                    <td>${sub.Days}</td>
                    <td>${sub.Room}</td>
                    <td class="units-cell">${sub.Units}</td>
                    <td><button type="button" class="btn btn-success btn-sm add-subject-btn">Add</button></td>
                `;

                        availableSubjectsTableBody.appendChild(row);
                    });
                })
                .catch(error => {
                    console.error('Error fetching subjects:', error);
                });
        }


        availableSubjectsTableBody.addEventListener('click', function (e) {
            if (e.target.classList.contains('add-subject-btn')) {
                const row = e.target.closest('tr');
                // Prevent adding duplicate subjects:
                const courseCode = row.children[0].textContent;
                const alreadySelected = Array.from(selectedSubjectsTableBody.children)
                    .some(r => r.children[0].textContent === courseCode);

                if (alreadySelected) {
                    alert('Subject already selected.');
                    return;
                }

                const clone = row.cloneNode(true);
                const addBtn = clone.querySelector('.add-subject-btn');
                addBtn.classList.remove('btn-success', 'add-subject-btn');
                addBtn.classList.add('btn-danger', 'remove-subject-btn');
                addBtn.textContent = 'Remove';
                selectedSubjectsTableBody.appendChild(clone);
                updateTotalUnits();
            }
        });

        selectedSubjectsTableBody.addEventListener('click', function (e) {
            if (e.target.classList.contains('remove-subject-btn')) {
                e.target.closest('tr').remove();
                updateTotalUnits();
            }
        });

        function updateTotalUnits() {
            let total = 0;
            document.querySelectorAll('#selectedSubjectsTableBody .units-cell').forEach(cell => {
                total += parseInt(cell.textContent) || 0;
            });
            totalUnitsDisplay.textContent = total;
        }
    });

</script>
</body>
</html>
